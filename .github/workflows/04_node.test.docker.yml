# This workflow will do
#  - a clean installation of node dependencies,
#  - cache/restore dependencies
#  - build the source code
#  - run tests on node 10
#  - build a docker images
#  - pushes the new docker image to docker hub

name: frontend tooling build and test ci/cd

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  
jobs:
  build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]

    steps:
      - uses: actions/checkout@v3
      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: install dependencies
        run: |
          npm install -g grunt
          npm install -g node-sass
          npm install
          npm ci
      - name: build and test frontend
        run: |
          npm run build --if-present
          npm run test
  push_to_dockerhub:
      runs-on: ubuntu-latest
      # build docker image and push to docker hub if the app build and test successfully
      needs: [build_test]
      steps:
        - name: checkout repo
          uses: actions/checkout@v3

        - name: set up qemu
          uses: docker/setup-qemu-action@v1
      
        - name: set up docker buildx
          uses: docker/setup-buildx-action@v1

        - name: login to dockerhub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      
        - name: build and push
          uses: docker/build-push-action@v2
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/bhtmim-w22-fe:latest
          
        - name: run docker image in a new container
          uses: addnab/docker-run-action@v3
          with:
            image: ${{ secrets.DOCKERHUB_USERNAME }}/bhtmim-w22-fe:latest
            run: |
              echo "runing the docker image"
              echo "testing the frontend"
              echo ${{ steps.docker_build.outputs.digest }}
